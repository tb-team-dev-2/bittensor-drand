/* Generated by cbindgen â€“ DO NOT EDIT */

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>

#define GENESIS_TIME 1692803367

#define DRAND_PERIOD 3

typedef struct CRByteBuffer {
  uint8_t *ptr;
  uintptr_t len;
  uintptr_t cap;
} CRByteBuffer;

const char *drand_public_key_hex(void);

const char *drand_chain_hash(void);

const char *drand_endpoint(uintptr_t idx);

void cr_free(struct CRByteBuffer buf);

void cr_free_str(char *s);

struct CRByteBuffer cr_encrypt(const uint8_t *data_ptr,
                               uintptr_t data_len,
                               uint64_t n_blocks,
                               double block_time,
                               uint64_t *round_out,
                               char **err_out);

uint8_t *cr_decrypt(const uint8_t *enc_ptr,
                    uintptr_t enc_len,
                    bool no_errors,
                    uintptr_t *out_len,
                    char **err_out);

uint64_t cr_get_latest_round(char **err_out);

struct CRByteBuffer cr_encrypt_commitment(const uint8_t *data_ptr,
                                          uintptr_t data_len,
                                          uint64_t blocks_until_reveal,
                                          double block_time,
                                          uint64_t *round_out,
                                          char **err_out);

struct CRByteBuffer cr_generate_commit(const uint16_t *uids_ptr,
                                       uintptr_t uids_len,
                                       const uint16_t *vals_ptr,
                                       uintptr_t vals_len,
                                       uint64_t version_key,
                                       uint64_t tempo,
                                       uint64_t current_block,
                                       uint16_t netuid,
                                       uint64_t subnet_reveal_epochs,
                                       double block_time,
                                       const uint8_t *hotkey_ptr,
                                       uintptr_t hotkey_len,
                                       uint64_t *round_out,
                                       char **err_out);
